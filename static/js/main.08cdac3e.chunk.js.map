{"version":3,"sources":["components/AppNavbar.js","components/Employee.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","className","Employee","state","sname","department","searchHandler","e","setState","target","value","onSelect","filterdata","this","filteremp","EmpData","filter","emp","firstName","toLowerCase","indexOf","filterByDepartment","options","defaultOption","type","onChange","placeholder","map","lastName","email","phoneNumber","id","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAWeA,G,MATG,WAChB,OACE,qBAAKC,UAAU,oCAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,uBAAhB,iC,mDCqFOC,G,kNApFbC,MAAQ,CACNC,MAAO,GACPC,WAAY,I,EAEdC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZJ,MAAOG,EAAEE,OAAOC,S,EAGpBC,SAAW,SAACJ,GACV,EAAKC,SAAS,CACZH,WAAYE,EAAEG,S,uDAGR,IAWJE,EAXG,EACuBC,KAAKV,MAA3BC,EADD,EACCA,MAAOC,EADR,EACQA,WAETS,EAAYC,EAAQC,QAAO,SAACC,GAChC,OAAqE,IAA9DA,EAAIC,UAAUC,cAAcC,QAAQhB,EAAMe,kBAE7CE,EAAqBN,EAAQC,QAAO,SAACC,GACzC,OACsE,IAApEA,EAAIZ,WAAWc,cAAcC,QAAQf,EAAWc,kBAKlDP,EADY,KAAVR,EACWU,EACW,KAAfT,EACIgB,EAEAN,EAKf,IAAMO,EAAU,CAAC,KAAM,UAAW,aAC5BC,EAAgBD,EAAQ,GAC9B,OACE,gCACE,uBAAOE,KAAK,OAAOC,SAAUZ,KAAKP,gBAClC,8BACE,cAAC,IAAD,CACEgB,QAASA,EACTG,SAAUZ,KAAKF,SACfD,MAAOa,EACPG,YAAY,uBAIhB,qBAAKzB,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,wBAAOA,UAAU,sBAAjB,UACE,uBAAOA,UAAU,gBAAjB,SACE,+BACE,sCACA,uCACA,8CACA,4CAEA,4BAGJ,gCACGW,EAAWe,KAAI,SAACV,GACf,OACE,+BACE,+BACGA,EAAIC,UADP,IACmBD,EAAIW,YAEvB,6BAAKX,EAAIY,QACT,6BAAKZ,EAAIa,cACT,6BAAKb,EAAIZ,eANFY,EAAIc,uB,GAnEVC,cCMRC,MATf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.08cdac3e.chunk.js","sourcesContent":["import React from \"react\"\n\nconst AppNavbar = () => {\n  return (\n    <nav className='navbar navbar-dark navbar-inverse'>\n      <div className='container-fluid'>\n        <span className='navbar-brand mb-0 h1'>Empolyee Info</span>\n      </div>\n    </nav>\n  )\n}\nexport default AppNavbar\n","import React, { Component } from \"react\"\nimport EmpData from \"../empData.json\"\n\nimport Dropdown from \"react-dropdown\"\nimport \"react-dropdown/style.css\"\n\nclass Employee extends Component {\n  state = {\n    sname: \"\",\n    department: \"\",\n  }\n  searchHandler = (e) => {\n    this.setState({\n      sname: e.target.value,\n    })\n  }\n  onSelect = (e) => {\n    this.setState({\n      department: e.value,\n    })\n  }\n  render() {\n    const { sname, department } = this.state\n    //console.log(sname)\n    const filteremp = EmpData.filter((emp) => {\n      return emp.firstName.toLowerCase().indexOf(sname.toLowerCase()) !== -1\n    })\n    const filterByDepartment = EmpData.filter((emp) => {\n      return (\n        emp.department.toLowerCase().indexOf(department.toLowerCase()) !== -1\n      )\n    })\n    let filterdata\n    if (sname !== \"\") {\n      filterdata = filteremp\n    } else if (department !== \"\") {\n      filterdata = filterByDepartment\n    } else {\n      filterdata = EmpData\n    }\n    //console.log(filteremp)\n    //console.log(filterByDepartment)\n\n    const options = [\"IT\", \"Finance\", \"Marketing\"]\n    const defaultOption = options[0]\n    return (\n      <div>\n        <input type='text' onChange={this.searchHandler} />\n        <div>\n          <Dropdown\n            options={options}\n            onChange={this.onSelect}\n            value={defaultOption}\n            placeholder='Select an option'\n          />\n        </div>\n\n        <div className='container'>\n          <div className='row'>\n            <table className='table table-striped'>\n              <thead className='thead-inverse'>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Phone Number</th>\n                  <th>Department</th>\n\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {filterdata.map((emp) => {\n                  return (\n                    <tr key={emp.id}>\n                      <td>\n                        {emp.firstName} {emp.lastName}\n                      </td>\n                      <td>{emp.email}</td>\n                      <td>{emp.phoneNumber}</td>\n                      <td>{emp.department}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Employee\n","import AppNavbar from \"./components/AppNavbar\"\nimport Employee from \"./components/Employee\"\n\nfunction App() {\n  return (\n    <div className='App'>\n      <AppNavbar />\n      <Employee />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}